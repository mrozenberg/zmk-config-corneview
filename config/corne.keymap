/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        se_oe: se_oe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp O>;
            label = "SE_OE";
        };

        se_ae: se_ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp A>;
            label = "SE_AE";
        };
    };

    behaviors {
        enter_layer: enter_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "ENTER_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        space_layer: space_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACE_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |  [   |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R                 &kp T             &kp Y            &kp U                 &kp I      &kp O    &kp P          &kp BSPC
&kp TAB    &kp A  &kp S  &kp D     &kp F                 &kp G             &kp H            &kp J                 &kp K      &kp L    &kp SEMICOLON  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V                 &kp B             &kp N            &kp M                 &kp COMMA  &kp DOT  &kp FSLH       &kp LEFT_BRACKET
                         &kp LGUI  &space_layer 2 SPACE  &kp LEFT_SHIFT    &kp RIGHT_SHIFT  &enter_layer 1 ENTER  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  7  |  8  |  9  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 |  4  |  5  |  6  |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |  1  |  2  |  3  |   |     |     |     |     |     |      |
            //                    |  0  |     | ENT |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp TILDE              &kp RS(SINGLE_QUOTE)  &kp N7        &kp N8        &kp N9          &kp K_MUTE  &kp C_VOL_DN  &kp UP_ARROW      &kp C_VOL_UP  &kp C_BRIGHTNESS_INC  &kp BSPC
&bt BT_CLR  &kp MINUS              &kp SLASH             &kp NUMBER_4  &kp N5        &kp NUMBER_6    &kp F6      &kp LEFT      &kp DOWN_ARROW    &kp RIGHT     &kp C_BRI_DEC         &trans
&kp PERIOD  &kp RIGHT_PARENTHESIS  &kp COMMA             &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3    &trans      &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT    &trans                &trans
                                                         &kp N0        &kp SPACE     &kp ENTER       &trans      &trans        &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans     &kp EXCLAMATION  &kp RA(NUMBER_2)  &kp HASH  &kp DLLR  &kp PRCNT    &kp RS(NUMBER_6)  &kp RS(MINUS)  &kp RS(N7)      &kp RS(N8)        &kp RS(N9)      &kp BSPC
&kp LCTRL  &none            &none             &none     &none     &none        &kp SLASH         &kp GRAVE      &kp RA(N7)      &kp RA(NUMBER_8)  &kp RA(N9)      &kp RS(NUMBER_2)
&kp LSHFT  &none            &none             &none     &none     &none        &kp QUESTION      &kp TILDE      &kp RA(RS(N7))  &kp RA(RS(N8))    &kp RA(RS(N9))  &kp RA(TILDE)
                                              &kp LGUI  &trans    &trans       &kp SPACE         &trans         &kp RALT
            >;
        };
    };
};
